@model PropertyPartialDataContainer
@{
    var claim = "Claim";
    var claimType = "ClaimType";

    var roleClaims = AllModel.Properties.RoleClaims.GetValueContainer(Model.IsAddForm);
}

<div class="form-group">
    <label class="col-form-label">Claim</label>
    <input type="text" id="@(claim + Model.FormType)" class="form-control" @Model.GeHtmlTags() />
</div>
<div class="form-group">
    <label class="col-form-label">Claim type</label>
    <input type="text" id="@(claimType+ Model.FormType)" class="form-control" @Model.GeHtmlTags() />
</div>
<div class="form-group">
    @if (Model.TabType == TabType.Detail)
    {
        <button id="@roleClaims.NavBtnIdCancel"
                class="btn btn-secondary"
                data-toggle="tab"
                href="#@roleClaims.NavPaneIdOverview"
                role="tab"
                aria-controls="@roleClaims.NavPaneIdOverview"
                aria-selected="false"
                onclick="RemoveActive(this);"></button>
    }
    else
    {
        <button id="@roleClaims.NavBtnIdCancelDetail"
                class="btn btn-secondary"
                data-toggle="tab"
                href="#@roleClaims.NavPaneIdOverview"
                role="tab"
                aria-controls="@roleClaims.NavPaneIdOverview"
                aria-selected="false"
                onclick="RemoveActive(this);"></button>

        <button id="@roleClaims.NavBtnIdAddNew"
                class="btn btn-primary addsign"
                data-toggle="tab"
                href="#@roleClaims.NavPaneIdOverview"
                role="tab"
                aria-controls="@roleClaims.NavPaneIdOverview"
                aria-selected="false"
                onclick="RemoveActive(this);"></button>
    }
</div>

@section Scripts
{
    <script type="text/javascript">


         function @AllModel.Properties.RoleClaims.GetPopulateMethodName() {
            $('#@(claim + Model.FormType)').val($(element).data('@((claim + Model.FormType).ToLower())'));
            $('#@(claimType+ Model.FormType)').val($(element).data('@((claimType + Model.FormType).ToLower())'));
        }

        function @AllModel.Properties.RoleClaims.GetUnpopulateMethodName() {
            RemoveActive(element);
            $('#@(claim + Model.FormType)').val('');
            $('#@(claimType+ Model.FormType)').val('');
        }

        @*function @Model.GetPopulateMethodName(claim) {
            $('#@Model.GetHtmlId(claim)').val($(element).data('@claim.ToLower()'));
            $('#@Model.GetHtmlId(claimType)').val($(element).data('@claimType.ToLower()'));
        }

        function @Model.GetUnpopulateMethodName(claim) {
            RemoveActive(element);
            $('#@Model.GetHtmlId(claim)').val('');
            $('#@Model.GetHtmlId(claimType)').val('');
        }*@

    </script>
}