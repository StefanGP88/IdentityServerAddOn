@page "{handler?}"
@model RazorTestLibrary.Areas.SimpleAdmin.Pages.Roles.AllModel
@{
    Layout = "_NestedLayout";
}


@section TableHead {
    <tr>
        <th scope="col"></th>
        <th scope="col">Role</th>
        <th scope="col">Normalized</th>
        <th scope="col"></th>
    </tr>
}

@section TableBody{
    @foreach (var item in Model?.List?.Items)
    {
        <tr>
            <td scope="row">
                <button type="button" class="btn btn-info"
                        data-toggle="modal" data-target="#editModal"
                        data-rolename="@item?.RoleName"
                        data-roleid="@item?.Id"
                        data-claimlist="@(item.Claims.Any() ? "["+string.Join(", ", item.Claims.Select(x=> "{\""+ x.Value + "\": \""+x.Type+"\"}").ToList()) + "]":"[]")"
                        data-roleConcurrency="@item?.ConcurrencyStamp">
                </button>
            </td>
            <td>@item?.RoleName</td>
            <td>@item?.NormalizedName</td>
            <td>
                <button type="button" class="btn btn-danger float-right"
                        data-toggle="modal" data-target="#deleteModal"
                        data-rolename="@item?.RoleName"
                        data-roleid="@item?.Id"
                        data-roleconcurrency="@item?.ConcurrencyStamp">
                </button>
            </td>
        </tr>
    }
}

@section Pagenation{
    <partial name="_Pagenation" model="Model.List.ToPagenationInfo()" />
}

@section AddModalBody{
    <form id="AddForm" method="post" asp-page-handler="Add" asp-route-pageNumber="@Model.List.Page" asp-route-pageSize="@Model.List.PageSize">
        @*TODO: Is there no tag helper for adding a anti forgery token? *@
        @Html.AntiForgeryToken()
        <nav>
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                <a class="nav-item nav-link active" id="nav-basesettingsadd-tab" data-toggle="tab" href="#nav-basesettingsadd" role="tab" aria-controls="nav-basesettingsadd" aria-selected="true">Base Settings</a>
                <a class="nav-item nav-link" id="nav-claimsoverviewadd-tab" data-toggle="tab" href="#nav-claimsoverviewadd" role="tab" aria-controls="nav-claimsoverviewadd" aria-selected="false">Role claims</a>
            </div>
        </nav>
        <div class="tab-content" id="nav-tabContent">
            <div class="tab-pane fade show active" id="nav-basesettingsadd" role="tabpanel" aria-labelledby="nav-basesettingsadd-tab">
                <div class="form-group">
                    <label for="recipient-name" class="col-form-label">Rolename</label>
                    <input type="text" class="form-control" id="addRoleName" name="dto.RoleName">
                </div>
            </div>
            <div class="tab-pane fade show" id="nav-claimsoverviewadd" role="tabpanel" aria-labelledby="nav-claimsoverviewadd-tab">
                <partial name="_ClaimOverviewPartial" model="@(new TablePartialDataContainer("Role", "Claim", false, true, new string[] { "Claim", "ClaimType" }))" />
            </div>
            <div class="tab-pane fade show" id="nav-claimsadd" role="tabpanel" aria-labelledby="nav-claimsadd-tab">
                <partial name="_ClaimPartial" model="@(new PartialDataContainer("Role", "Claim", false, false, true))" />
            </div>
            <div class="tab-pane fade show" id="nav-claimsadddetail" role="tabpanel" aria-labelledby="nav-claimsadddetail-tab">
                <partial name="_ClaimPartial" model="@(new PartialDataContainer("Role", "Claim", true, false, true))" />
            </div>
        </div>
    </form>
}

@section EditModalBody{
    <form id="EditForm" method="post" asp-page-handler="Edit" asp-route-pageNumber="@Model.List.Page" asp-route-pageSize="@Model.List.PageSize">
        @Html.AntiForgeryToken()
        <nav>
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                <a class="nav-item nav-link active" id="nav-basesettingsedit-tab" data-toggle="tab" href="#nav-basesettingsedit" role="tab" aria-controls="nav-basesettingsedit" aria-selected="true">Base Settings</a>
                <a class="nav-item nav-link" id="nav-claimsedit-tab" data-toggle="tab" href="#nav-claimsedit" role="tab" aria-controls="nav-claimsedit" aria-selected="false">Role claims</a>
            </div>
        </nav>
        <div class="tab-content" id="nav-tabContent">
            <div class="tab-pane fade show active" id="nav-basesettingsedit" role="tabpanel" aria-labelledby="nav-basesettingsedit-tab">
                <div class="form-group">
                    <label for="recipient-name" class="col-form-label">RoleName</label>
                    <input type="text" class="form-control" id="editRoleName" name="dto.RoleName">
                </div>
            </div>
            <div class="tab-pane fade show" id="nav-claimsoverviewadd" role="tabpanel" aria-labelledby="nav-claimsoverviewadd-tab">
                <partial name="_ClaimOverviewPartial" model="@(new TablePartialDataContainer("Role", "Claim", true, false, new string[] { "Claim", "ClaimType" }))" />
            </div>
            <div class="tab-pane fade show" id="nav-claimsadd" role="tabpanel" aria-labelledby="nav-claimsadd-tab">
                <partial name="_ClaimPartial" model="@(new PartialDataContainer("Role", "Claim", false,  true, false))" />
            </div>
            <div class="tab-pane fade show" id="nav-claimsadddetail" role="tabpanel" aria-labelledby="nav-claimsadddetail-tab">
                <partial name="_ClaimPartial" model="@(new PartialDataContainer("Role", "Claim", true,  true, false))" />
            </div>
        </div>
        <input type="hidden" id="editId" name="dto.Id" />
        <input type="hidden" id="editConcurrencyStamp" name="dto.ConcurrencyStamp" />
    </form>
}

@section DeleteModalBody{
    <div class="alert alert-danger" role="alert">
        Are you sure you want to delete the <span id="deleteRoleName"></span> role?
    </div>
    <form id="DeleteForm" method="post" asp-page-handler="Delete" asp-route-pageNumber="@Model.List.Page" asp-route-pageSize="@Model.List.PageSize">
        @Html.AntiForgeryToken()
        <input type="hidden" id="deleteId" name="dto.Id" />
        <input type="hidden" id="deleteConcurrencyStamp" name="dto.ConcurrencyStamp" />
    </form>
}

@section Scripts{
    <script type="text/javascript">


        $('#editModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var modal = $(this);
            modal.find('.modal-body #editRoleName').val(button.data('rolename'));
            modal.find('.modal-body #editId').val(button.data('roleid'));
            modal.find('.modal-body #editConcurrencyStamp').val(button.data('roleconcurrency'));

            var claimRows = $('#editClaimTableBody .editClaimRemove');
            for (var key in claimRows) {
                $('#editClaimTableBody .editClaimRemove').parents().eq(1).remove();
            }

            var claimlist = button.data('claimlist');
            for (var key in claimlist) {
                for (var kkey in claimlist[key]) {
                    $('#editClaimTableBody').append('<tr><td><button class="btn btn-danger btn-sm editClaimRemove" onclick="RemoveClaim(this, event);"></button><input type="hidden" name="dto.Claims[' + kkey + ']" value="' + claimlist[key][kkey] + '" /></td><td>' + kkey + '</td><td>' + claimlist[key][kkey] + '</td></tr>');
                }
            }
        });

        $('#deleteModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var modal = $(this);
            modal.find('.modal-body #deleteRoleName').text(button.data('rolename'));
            modal.find('.modal-body #deleteId').val(button.data('roleid'));
            modal.find('.modal-body #deleteConcurrencyStamp').val(button.data('roleconcurrency'));
        });

        $('#editClaimBtn').on('click', function (e) {
            e.preventDefault();
            var claim = $('#editClaim').val();
            var claimType = $('#editClaimType').val();
            console.log(claim);
            if (claim.length < 1 || claimType.length < 1) {
                alert('claim and claim type must have a value');
            }
            else {
                $('#editClaimTableBody').append('<tr><td><button class="btn btn-danger btn-sm editClaimRemove" onclick="RemoveClaim(this, event);"></button><input type="hidden" name="dto.Claims[' + claim + ']" value="' + claimType + '" /></td><td>' + claim + '</td><td>' + claimType + '</td></tr>');
                $('#editClaim').val('');
                $('#editClaimType').val('');
            }
        });

        $('#addClaimBtn').on('click', function (e) {
            e.preventDefault();
            var input = {
                handler: 'AddClaimRow',
                claim: $('#addClaim').val(),
                claimType: $('#addClaimType').val()
            };
            console.log(input);
            if (input.claim.length < 1 || input.claimType.length < 1) {
                alert('claim and claim type must have a value');
            }
            else {
                AppendTableRow(input, $('#addClaimTableBody'));
                $('#addClaim').val('');
                $('#addClaimType').val('');
            }
        });

    </script>
}
