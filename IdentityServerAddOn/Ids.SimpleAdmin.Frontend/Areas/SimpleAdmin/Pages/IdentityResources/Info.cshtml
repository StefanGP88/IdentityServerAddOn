@page "{id:int?}"
@model Ids.SimpleAdmin.Frontend.Areas.SimpleAdmin.Pages.IdentityResources.InfoModel
@{
    Layout = "_NestedInfoLayout";
    var userClaimsDisplay = "User Claims";
    var userClaims = userClaimsDisplay.ToLowerNoSpaces();

    var propertiesDisplay = "Properties";
    var properties = propertiesDisplay.ToLowerNoSpaces();

}

@section NavTabs{
    <a class="nav-item nav-link" id="@(userClaims)tab" data-toggle="tab" href="#@userClaims" role="tab">@userClaimsDisplay</a>
    <a class="nav-item nav-link" id="@(properties)tab" data-toggle="tab" href="#@properties" role="tab">@propertiesDisplay</a>
}

@section Basesettings{
    <div class="form-group">
        <label class="col-form-label">Name</label>
        <input type="text" class="form-control" id="name" name="dto.Name" value="@Model?.Data?.Name">
        <partial name="_ValidationNotification" model="@ModelState["dto.Name"]" />
    </div>
    <div class="form-group">
        <label class="col-form-label">Display name</label>
        <input type="text" class="form-control" id="displayName" name="dto.DisplayName" value="@Model?.Data?.DisplayName">
        <partial name="_ValidationNotification" model="@ModelState["dto.DisplayName"]" />
    </div>
    <div class="form-group">
        <label class="col-form-label">Description</label>
        <textarea class="form-control" id="description" name="dto.Description">@Model?.Data?.Description</textarea>
        <partial name="_ValidationNotification" model="@ModelState["dto.Description"]" />
    </div>
    <fieldset class="form-group">
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="enabled" name="dto.Enabled" value="True" @Model?.Data?.Enabled.IsChecked() />
            <label class="form-check-label">Is enabled</label>
        </div>
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="nonEditable" name="dto.Required" value="True" @Model?.Data?.Required.IsChecked() />
            <label class="form-check-label">Is required</label>
        </div>
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="nonEditable" name="dto.Emphasize" value="True" @Model?.Data?.Emphasize.IsChecked() />
            <label class="form-check-label">Emphasize</label>
        </div>
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="showInDiscovery" name="dto.ShowInDiscoveryDocument" value="True" @Model?.Data?.ShowInDiscoveryDocument.IsChecked() />
            <label class="form-check-label">Show in discovery document</label>
        </div>
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="nonEditable" name="dto.NonEditable" value="True" @Model?.Data?.NonEditable.IsChecked() />
            <label class="form-check-label">Is non-editable</label>
        </div>
    </fieldset>
}

@section ResourceProperties{
    @{
        RenderTabPanel(userClaims,
            Model?.Data?.UserClaims,
            new List<string> { "Type" });

        RenderTabPanel(properties,
            Model?.Data?.Properties,
            new List<string> { "Value", "Key" });
    }
}

@functions {
    void RenderTableBody<T>(string name, List<T> list)
    {
        <tbody id="@name.AsTableBody()">
            @if (list != null)
            {
                foreach (var item in list)
                {
                    Html.RenderPartialAsync("TableRowPartials/_" + name.FirstLetterToUpper(), item);
                }
            }
        </tbody>
    }
    void RenderTabPanel<T>(string name, List<T> list, List<string> columns)
    {
        <div class="tab-pane fade" id="@name" role="tabpanel">
            <br />
            <table class="table table-striped border border-dark">
                @{
                    Html.RenderPartialAsync("_Tableheader", columns);
                    RenderTableBody(name, list);
                }
            </table>
            <button type="button" class="btn btn-primary" onclick="AppendTableRow(this, '@name', '@name.AsTableBody()')"></button>
        </div>
    }
}