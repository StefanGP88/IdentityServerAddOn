<script type="text/javascript">
    function SetRemoveModal(element, nameofobject) {
        var template = $('#removeModalBody').html();
        var ConfirmRemove = function () {
            $(element).closest('tr').remove();
            CancelModal();
        };
        ShowModal('Remove', template, ConfirmRemove);
        var removeName = $("[name='" + nameofobject + "']").val();
        $('#removeRowNameSpan').text(removeName);
    }

    function SetDeleteModal(identifier, name) {
        var template = $('#deleteModalBody').html();
        var ConfirmDelete = function () {
            $('#DeleteForm').submit();
            CancelModal();
            $('#deleteId').val('&nbsp;');
        };
        ShowModal('Delete', template, ConfirmDelete);
        $('#deleteId').val(identifier);
        $('#deleteNameSpan').text(name);
    }

    function SetAbandonModal() {
        var template = $('#abandonModalBody').html();
        var ConfirmAbandon = function () {
            window.location.href = '@GetBackUrl()';
        };
        ShowModal('Abandon', template, ConfirmAbandon);
    }
    function SetRowCount(element, count) {
        $(element).prop('rows', count);
    }

    function ShowModal(title, body, onConfirm) {
        SetModal(title, body, onConfirm);
        $('#modal').modal('show');
    }

    function SetModal(title, body, onConfirm) {
        $('#modalBody').html(body)
        $('#modalLabel').html(title);
        $('#dismisModalSuccess').on('click', onConfirm);
    }

    function CancelModal() {
        var CancelModal = function () { };
        SetModal('&nbsp;', '&nbsp;', CancelModal);
        $('#modal').modal('hide');
    }

    function ToggleEdit(element) {
        if ($(element).hasClass('btn-success')) {
            $(element).removeClass('btn-success').addClass('btn-info');
            ToggleDisabled(element, true);

        } else if ($(element).hasClass('btn-info')) {
            $(element).removeClass('btn-info').addClass('btn-success');
            ToggleDisabled(element, false);
        }
    }

    function ToggleDisabled(element, isDisabled) {
        var inputs = GetInputs(element);
        inputs.each(function () {
            $(this).prop('disabled', isDisabled);
            $(this).toggleClass('border-0', isDisabled);
            $(this).toggleClass('bg-transparent', isDisabled);
        });

    }

    function GetInputs(element) {
        var row = $(element).closest('tr');
        var inputs = row.find('.form-control,.form-check-label');
        return inputs;
    }

    function AppendTableRow(partialName, tableBodyName) {
        var input = {
            handler: 'Partial',
            partialName: partialName
        };
        var element = $('#' + tableBodyName);
        $.get('@(_httpContextAccessor.HttpContext.Request.Path)', input, function (data) {
            $(element).append(data);
        });
    }
</script>
@functions {
    string GetBackUrl()
    {
        var area = _httpContextAccessor.HttpContext.Request.RouteValues["area"].ToString().ToLower();
        var page = _httpContextAccessor.HttpContext.Request.RouteValues["page"].ToString().ToLower().TrimEnd("info".ToArray());
        page = page.TrimEnd('/');
        return "/" + area + page + _httpContextAccessor.HttpContext.Request.QueryString;
    }
} 