@model SecretsContract

@{
    var idx = Guid.NewGuid().ToString().ToLowerInvariant();
    var collapse = "secret-" + idx;
    var delete = collapse + "-d";
    var summery = _validationCache.SecretSummary(Model);
    var bgcolor = summery.HasError ? "alert-danger" : "bg-light";
}
<tr class="border-top border-bottom @bgcolor @delete">
    <td>
        <a role="button"
           class="btn btn-outline-primary btn-sm m-1 collapsed"
           data-toggle="collapse"
           href="#@collapse">
            Edit
        </a>
    </td>
    <td>
        @Model?.Type
    </td>
    <td>
        <button type="button"
                class="btn btn-outline-info btn-sm"
                data-toggle="popover" data-content="@Model?.Value">
            View
        </button>
    </td>
    <td>
        @Model?.Description
    </td>
    <td>
        @Model?.Expiration.GetValueOrDefault(DateTime.Today).ToString("g")
    </td>
    <td>
        <button type="button"
                class="btn btn-outline-danger btn-sm m-1 float-right"
                onclick="RemoveClassElement('@delete', 'secret');">
            Remove
        </button>
    </td>
</tr>
<tr class="@delete">
    <td colspan="6">
        <div class="row collapse" id="@collapse">
            <div class="col">
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <input type="hidden" name="dto.Secrets.index" value="@idx" />
                            <input type="hidden" name="dto.Secrets[@idx].Id" value="@Model?.Id" />
                            <input type="hidden" name="dto.Secrets[@idx].ClientId" value="@Model?.ClientId" />
                            <label class="col-form-label">Type</label>
                            @_validationCache.ErrorMessage(Model, nameof(Model.Type), out var inputColor)
                            <select name="dto.Secrets[@idx].Type" class="form-control form-control-sm @inputColor">
                                @foreach (var secretName in SecretConstants.SecretTypeNames)
                                {
                                    if (secretName.Key == Model?.Type)
                                    {
                                        <option value="@secretName.Key" selected>@secretName.Value</option>
                                    }
                                    else
                                    {
                                        <option value="@secretName.Key">@secretName.Value</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col">
                        <div class="form-group">
                            <label class="col-form-label">Expiration</label>
                            @_validationCache.ErrorMessage(Model, nameof(Model.Expiration), out inputColor)
                            <input type="datetime-local"
                                   name="dto.Secrets[@idx].Expiration"
                                   value="@Model?.Expiration.GetValueOrDefault(DateTime.Today).ToString("s")"
                                   class="form-control form-control-sm  @inputColor" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <label class="col-form-label">Value</label>
                            @_validationCache.ErrorMessage(Model, nameof(Model.Value), out inputColor)
                            <input type="text"
                                   name="dto.Secrets[@idx].Value"
                                   value="@Model?.Value"
                                   class="form-control form-control-sm  @inputColor" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="col d-flex flex-column">
                <div class="row flex-grow-1 d-flex flex-column">
                    <div class="col flex-grow-1 d-flex flex-column">
                        <div class="form-group flex-grow-1 d-flex flex-column">
                            <label class="col-form-label">Description</label>
                            @_validationCache.ErrorMessage(Model, nameof(Model.Description), out inputColor)
                            <textarea name="dto.Secrets[@idx].Description"
                                      class="form-control form-control-sm  flex-grow-1 @inputColor">@Model?.Description</textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </td>
</tr>