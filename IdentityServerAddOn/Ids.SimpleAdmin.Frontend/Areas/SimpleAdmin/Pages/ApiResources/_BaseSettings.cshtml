@model Ids.SimpleAdmin.Frontend.Areas.SimpleAdmin.Pages.ApiResources.InfoModel
<Collapsable title="Base Settings" error-summary="_validationCache.BaseSettingSummary(Model?.Data)">
    <div class="form-group">
        <label class="col-form-label">Name</label>
        @_validationCache.ErrorMessage(Model?.Data, nameof(Model.Data.Name), out var inputColor)
        <input type="text" class="form-control @inputColor" name="dto.Name" value="@Model?.Data?.Name">
    </div>
    <div class="form-group">
        <label class="col-form-label">Display name</label>
        @_validationCache.ErrorMessage(Model?.Data, nameof(Model.Data.DisplayName), out inputColor)
        <input type="text" class="form-control @inputColor" id="displayName" name="dto.DisplayName" value="@Model?.Data?.DisplayName">
    </div>
    <div class="form-group">
        <label class="col-form-label">Description</label>
        @_validationCache.ErrorMessage(Model?.Data, nameof(Model.Data.Description), out inputColor)
        <textarea class="form-control @inputColor" id="description" name="dto.Description">@Model?.Data?.Description</textarea>
    </div>
    <div class="form-group">
        <label class="col-form-label">Allowed access token signing algorithmes</label>
        @_validationCache.ErrorMessage(Model?.Data, nameof(Model.Data.AllowedAccessTokenSigningAlgorithms), out inputColor)
        <textarea class="form-control @inputColor" id="allowedAlgorithmes" name="dto.AllowedAccessTokenSigningAlgorithms">
            @Model?.Data?.AllowedAccessTokenSigningAlgorithms
        </textarea>
    </div>
    <fieldset class="form-group">
        <div class="form-check">
            @{var errMsg = _validationCache.ErrorMessage(Model?.Data, nameof(Model.Data.Enabled), out inputColor);}
            <input type="checkbox" class="form-check-input @inputColor" id="enabled" name="dto.Enabled" value="True" @Model?.Data?.Enabled.IsChecked() />
            <label class="form-check-label">Is enabled</label> @errMsg
        </div>
        <div class="form-check">
            @{ errMsg = _validationCache.ErrorMessage(Model?.Data, nameof(Model.Data.Enabled), out inputColor);}
            <input type="checkbox" class="form-check-input @inputColor" id="nonEditable" name="dto.NonEditable" value="True" @Model?.Data?.NonEditable.IsChecked() />
            <label class="form-check-label">Is non-editable</label> @errMsg
        </div>
        <div class="form-check">
            @{ errMsg = _validationCache.ErrorMessage(Model?.Data, nameof(Model.Data.Enabled), out inputColor);}
            <input type="checkbox" class="form-check-input @inputColor" id="showInDiscovery" name="dto.ShowInDiscoveryDocument" value="True" @Model?.Data?.ShowInDiscoveryDocument.IsChecked() />
            <label class="form-check-label">Show in discovery document</label> @errMsg
        </div>
    </fieldset>
</Collapsable>
